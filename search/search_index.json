{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Gitblog2","text":"<p>Check a live demo.  </p>"},{"location":"#what-is-this","title":"What is this?","text":"<p>A blog generator that keeps things simple:  </p> <ul> <li>\ud83c\udfc4 Straightforward - Just write Markdown.</li> <li>\u26a1 Minimal footprint - about 15KB uncompressed.</li> <li>\ud83c\udf10 Universal - No JavaScript, no divs, no css classes, just semantic html.  </li> <li>\ud83d\udee0 Familiar tooling - Git, Markdown, Jinja2.</li> </ul> <p>While provinding modern features:</p> <ul> <li>Modern look - with support for other stylesheets</li> <li>RSS and Atom feeds</li> <li>Avatar and social accounts - based on your Github profile</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>From zero to a live blog.</p> <p>You can see the full setup of a working blog here. For this tutorial we'll assume that you use Github to host your repo and Cloudflare Pages to host your blog. You need to have accounts on those platforms as a prerequisite.  </p> <ol> <li> <p>Create a repo, add a folder of your first section, add a Markdown file in it for your first blog post. Use a <code>draft/</code> folder to save posts that are not ready for publication. Non Markdown files and common irrelevant content is ignored by default, e.g. <code>.github/</code>, <code>README.md</code>, <code>LICENSE.md</code>.</p> </li> <li> <p>Add a <code>.github/workflows/publish.yaml</code> file to your repo with the following content:</p> <p><code>yaml name: Publish Blog on:   push:     branches: [ main ] jobs:   build-and-publish:     runs-on: ubuntu-latest     steps:       - uses: docker://henritel/gitblog2         with:           args: post-css cloudflare-pages         env:           SOURCE_REPO: https://github.com/${{ github.repository }}           BASE_URL: &lt;YOUR_BLOG_URL&gt;           GITHUB_TOKEN: ${{ secrets.RO_GITHUB_TOKEN }}           CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}           CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}</code></p> <p>Set <code>BASE_URL</code> with your blog's base url. This will automatically publish your blog on Cloudflare Pages when you push changes to your repo. It assumes your cloudflare project is named <code>blog</code> but if that's not the case you can add an <code>CLOUDFLARE_PROJECT</code> env to the workflow with the correponding name. 3. In your repo's settings, go under <code>secrets/actions</code> to set the <code>CLOUDFLARE_ACCOUNT_ID</code> and <code>CLOUDFLARE_API_TOKEN</code> secrets based on your Cloudflare API keys. Also setup a <code>RO_GITHUB_TOKEN</code> if you want to add social capabilities like a profile pic and links to social accounts. Go to https://github.com/settings/tokens/ to generate a token with <code>read:user</code> access rights.</p> </li> </ol>"},{"location":"#installation","title":"Installation","text":"<pre><code>pip install gitblog2\n</code></pre> <p>There's also a container image available on docker hub.</p>"},{"location":"#usage","title":"Usage","text":"<p>From the command line:</p> <pre><code>gitblog2 https://codeberg.org/HenriTEL/gitblog2.git --repo-subdir=example --url-base=https://example.com --no-social\n</code></pre> <p>From the library:</p> <pre><code>from gitblog2 import GitBlog\n\nsource_repo = \"https://codeberg.org/HenriTEL/git-blog.git\"\noutput_dir = \"./public\"\nurl_base = \"https://example.com\"\nwith GitBlog(source_repo, repo_subdir=\"example\") as gb:\n    gb.write_blog(output_dir, base_url=url_base, with_social=False)\n</code></pre> <p>From the container:</p> <pre><code>docker run --rm -v $PWD/public:/public \\\n    -e SOURCE_REPO=https://github.com/HenriTEL/gitblog2.git \\\n    -e REPO_SUBDIR=example \\\n    -e BASE_URL=https://example.com \\\n    -e NO_SOCIAL=true \\\n    henritel/gitblog2\n</code></pre>"},{"location":"#customisation","title":"Customisation","text":"<p>Gitblog2 just produces static file so it should integrate seamlessly integrate with anything (cron jobs, commit hooks, nginx, apache, you name it.). You can use simplecss as an alternate stylesheet, support for more stylesheets is planned.</p>"},{"location":"#dev-quickstart","title":"Dev quickstart","text":"<p>Make sure to have poetry installed, then Setup your local web server:</p> <pre><code>poetry install\nwget \"https://redbean.dev/redbean-tiny-2.2.com\" -O redbean.zip\nzip redbean.zip -j providers/assets/.init.lua\nchmod +x redbean.zip\n</code></pre> <p>In one terminal, update the blog as needed:</p> <pre><code>poetry run gitblog2 -l debug --repo-subdir=example --base-url=https://example.com --no-social\n</code></pre> <p>In another terminal, serve the blog:</p> <pre><code>./redbean.zip -D ./public\n</code></pre>"},{"location":"#roadmap","title":"Roadmap","text":"<p>High priority:</p> <ul> <li>Move the doc to the wiki with different audiences.</li> <li>Add image in README like https://github.com/nextcloud/server</li> <li>reduce python version compatibility</li> <li>remove changelog</li> </ul> <p>Low priority:</p> <ul> <li>Add gitlab support</li> <li>Add about page (and link to it from pp) based on user bio and README.md</li> <li>Check draft support (set meta publish_date to first <code>mv</code>)</li> <li>Use user's profile handle first and commit author only as a fallback</li> <li>E2E tests</li> <li>Deal with TODOs or make issues for newcomers</li> <li>Improve score on https://pagespeed.web.dev/analysis/https-blog-henritel-com/oktd50o2sy?form_factor=desktop</li> <li>Add doc for customisation</li> <li>Change template + accessible variables</li> <li>Add icons</li> <li>Change main color theme</li> <li>Make a script to remove unused icons</li> <li>Make a better TOC extension (remove div and classes)</li> <li>Make markdown renderer set loading=\"lazy\" on img tags</li> <li>Unit tests, pagespeed test</li> <li>Linting (pylint + pyre?)</li> <li>Refactor lib.py into multiple files</li> <li>Add contributing section</li> <li>Remove div and classes from footnotes</li> </ul>"},{"location":"#golden-resources","title":"Golden resources","text":"<p>https://accessiblepalette.com https://modernfontstacks.com/ https://anthonyhobday.com/sideprojects/saferules/ https://lawsofux.com/ https://developer.mozilla.org/en-US/docs/Web/HTML https://developer.mozilla.org/en-US/docs/Web/CSS https://developer.mozilla.org/en-US/docs/Web/SVG https://icons.getbootstrap.com/ </p>"},{"location":"#classless-stylesheets-candidates","title":"Classless stylesheets candidates","text":"<p>https://github.com/kevquirk/simple.css/blob/main/simple.css </p> <p>https://github.com/yegor256/tacit https://github.com/kognise/water.css https://github.com/xz/new.css https://github.com/edwardtufte/tufte-css https://github.com/programble/writ https://github.com/oxalorg/sakura https://github.com/susam/spcss </p>"}]}